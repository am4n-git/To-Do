{"version":3,"sources":["List.js","App.js","reportWebVitals.js","index.js"],"names":["List","props","console","log","itemL","map","itemObj","className","item","onClick","key","filter","App","useState","currentItem","setCurrentItem","itemList","updateItemList","placeholder","value","onChange","e","target","Date","getDate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAyBeA,MAvBf,SAAcC,GAOV,OADAC,QAAQC,IAAIF,GAER,8BAGIA,EAAMG,MAAMC,KAAI,SAACC,GACd,OAAQ,sBAAKC,UAAU,OAAf,UACJ,4BAAID,EAAQE,OACZ,wBAAQC,QAAS,WAbd,IAACC,IAa6BJ,EAAQI,IAZrCT,EAAMG,MAAMO,QAAO,SAAAL,GAC9B,OAAOA,EAAQI,MAAQA,MAWhB,wBCeJE,MA1Bf,WACE,MAAoCC,mBAAS,IAA7C,mBAAMC,EAAN,KAAmBC,EAAnB,KACA,EAAiCF,mBAAS,IAA1C,mBAAMG,EAAN,KAAgBC,EAAhB,KAUA,OACE,sBAAKV,UAAU,MAAf,UACE,uCACA,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,uBAAOW,YAAY,WAAWC,MAAOL,EAAaM,SAdlC,SAACC,GACvBN,EAAeM,EAAEC,OAAOH,UAclB,wBAAQV,QAXM,WACpBQ,EAAe,GAAD,mBAAKD,GAAL,CAAe,CAACR,KAAKM,EAAaJ,KAAI,IAAIa,MAAOC,cAC/DT,EAAe,KAST,kBAEF,cAAC,EAAD,CAAMX,MAAQY,WCbPS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cd897764.chunk.js","sourcesContent":["import React from 'react'\r\nimport './List.css'\r\nfunction List(props) {\r\n    const deleteItem= (key)=>{\r\n       const newList=  props.itemL.filter(itemObj=>{\r\n            return itemObj.key !== key\r\n        })\r\n    }\r\n    console.log(props)\r\n    return (\r\n        <div>\r\n\r\n            {\r\n            props.itemL.map((itemObj)=>{\r\n               return (<div className=\"item\">\r\n                   <p>{itemObj.item}</p> \r\n                   <button onClick={()=>{deleteItem(itemObj.key)}}>x</button>\r\n                   </div>);\r\n            })\r\n        }\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default List\r\n","\nimport './App.css';\nimport {useState} from 'react';\nimport List from './List';\n\nfunction App() {\n  const[currentItem, setCurrentItem]= useState(\"\")\n  const[itemList, updateItemList]= useState([])\n  const onChangeHandler = (e) =>{\n    setCurrentItem(e.target.value)\n  }\n\n  const addItemToList = ()=>{\n    updateItemList([...itemList, {item:currentItem, key:new Date().getDate() }])\n    setCurrentItem(\"\");\n  }\n  \n  return (\n    <div className=\"App\">\n      <h1>To-Do</h1>\n      <div className=\"wrapper\">\n        <div className=\"input-wrapper\">\n          <input placeholder=\"Add item\" value={currentItem} onChange={onChangeHandler}/>\n          <button onClick={addItemToList}>+</button>\n        </div>\n        <List itemL= {itemList} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}